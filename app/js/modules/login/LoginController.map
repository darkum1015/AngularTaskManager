{"version":3,"sources":["LoginController.js"],"names":[],"mappings":"AAAA;AAAA,AAAC,SAAU,AAAD,CAAG;AACT,AAAI,IAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,OAAO,AAAC,CAAC,YAAW,CAAC,CAAC;AAE5C,UAAQ,WAAW,AAAC,CAAC,iBAAgB,CAAE,gBAAc,CAAC,CAAC;AACvD,gBAAc,QAAQ,EAAI,EAAC,OAAM,CAAE,KAAG,CAAE,iBAAe,CAAC,CAAC;AAEzD,SAAS,gBAAc,CAAE,KAAI,CAAE,CAAA,EAAC,CAAE,CAAA,cAAa,CAAE;AAC7C,AAAI,MAAA,CAAA,EAAC,EAAI,KAAG,CAAC;AACb,KAAC,YAAY,EAAI,MAAI,CAAC;AACtB,KAAC,oBAAoB,EAAG,GAAC,CAAC;AAC1B,KAAC,SAAS,EAAG,GAAC,CAAC;AACf,KAAC,SAAS,KAAK,EAAE,GAAC,CAAC;AACnB,KAAC,SAAS,SAAS,EAAE,GAAC,CAAC;AAEvB,KAAC,UAAU,EAAI,UAAQ,CAAC;AAExB,WAAS,UAAQ,CAAE,AAAD,CAAE;AAChB,SAAG,EAAC,SAAS,KAAK,GAAK,CAAA,EAAC,SAAS,SAAS,CAAE;AACxC,mBAAW,AAAC,EAAC,KAAK,AAAC,CAAC,SAAU,QAAO,CAAE;AACnC,AAAI,YAAA,CAAA,IAAG,EAAI,CAAA,QAAO,KAAK,CAAC;AAExB,aAAG,IAAG,QAAQ,CAAE;AACZ,uBAAW,QAAQ,AAAC,CAAC,WAAU,CAAE,CAAA,IAAG,MAAM,CAAC,CAAC;AAC5C,aAAC,YAAY,EAAI,MAAI,CAAC;AAEtB,yBAAa,WAAW,AAAC,CAAC,OAAM,CAAC,CAAC;UACtC,KAAK;AACD,aAAC,YAAY,EAAI,KAAG,CAAC;AACrB,aAAC,oBAAoB,EAAI,CAAA,IAAG,QAAQ,CAAC;UACzC;AAAA,QACJ,CAAE,UAAU,KAAI,CAAE;AACd,WAAC,YAAY,EAAI,KAAG,CAAC;AACrB,WAAC,oBAAoB,EAAI,CAAA,KAAI,QAAQ,CAAC;QAC1C,CAAC,CAAC;MACN,KAAK;AACD,YAAI,AAAC,CAAC,4BAA2B,CAAC,CAAC;MACvC;AAAA,IAEJ;AAAA,AAEA,WAAS,aAAW,CAAE,AAAD,CAAE;AACnB,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,EAAC,MAAM,AAAC,EAAC,CAAC;AAEzB,UAAI,AAAC,CAAC;AACF,YAAI,CAAG,yCAAuC;AAC9C,eAAO,CAAG,OAAK;AACf,gBAAQ,CAAG,EAEP,cAAa,CAAG,oCAAkC,CACtD;AACA,aAAK,CAAG,CAAA,OAAM,EAAG,CAAA,EAAC,SAAS,KAAK,CAAA,CAAE,aAAW,CAAA,CAAG,CAAA,EAAC,SAAS,SAAS;AAAA,MAEvE,CAAC,KAAK,AAAC,CAAC,QAAS,QAAM,CAAE,QAAO,CAAE;AAC9B,eAAO,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;MAC9B,CAAE,SAAS,QAAM,CAAE,KAAI,CAAE;AACrB,eAAO,OAAO,AAAC,CAAC,QAAO,CAAC,CAAC;MAC7B,CAAC,CAAC;AAEF,WAAO,CAAA,QAAO,QAAQ,CAAC;IAC3B;AAAA,EAGJ;AAAA,AACJ,CAAC,AAAC,EAAC,CAAC;AAAA","file":"app/js/modules/login/LoginController.js","sourcesContent":["(function () {\r\n    var appModule = angular.module('app.module');\r\n\r\n    appModule.controller('LoginController',LoginController);\r\n    LoginController.$inject = ['$http','$q','UtilityService'];\r\n\r\n    function LoginController($http,$q,UtilityService){\r\n        var vm = this;\r\n        vm.loginFailed = false;\r\n        vm.loginFailureMessage =\"\";\r\n        vm.authData ={};\r\n        vm.authData.name=\"\";\r\n        vm.authData.password=\"\";\r\n\r\n        vm.initLogin = initLogin;\r\n\r\n        function initLogin(){\r\n            if(vm.authData.name && vm.authData.password){\r\n                authenticate().then(function (response){\r\n                    var data = response.data;\r\n\r\n                    if(data.success){\r\n                        localStorage.setItem('authToken',data.token);\r\n                        vm.loginFailed = false;\r\n\r\n                        UtilityService.navigateTo('/home');\r\n                    }else{\r\n                        vm.loginFailed = true;\r\n                        vm.loginFailureMessage = data.message;\r\n                    }\r\n                },function (error){\r\n                    vm.loginFailed = true;\r\n                    vm.loginFailureMessage = error.message;\r\n                });\r\n            }else{\r\n                alert(\"Insufficient data to check\");\r\n            }\r\n\r\n        }\r\n\r\n        function authenticate(){\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                \"url\": \"http://localhost:8300/api/authenticate\",\r\n                \"method\": \"POST\",\r\n                \"headers\": {\r\n\r\n                    \"content-type\": \"application/x-www-form-urlencoded\"\r\n                },\r\n                \"data\": \"name=\"+ vm.authData.name+\"&password=\"+ vm.authData.password\r\n\r\n            }).then(function success(response){\r\n                deferred.resolve(response);\r\n            },function failure(error){\r\n                deferred.reject(\"Failed\");\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n\r\n    }\r\n})();"]}